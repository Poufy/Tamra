version: 0.2
run-as: root

# env:
  # variables:
    # POSTGRES_DB: "tamra-postgis-test"
    # https://hub.docker.com/_/postgres#:~:text=for%20more%20details.-,POSTGRES_DB,-This%20optional%20environment
phases:
  install:
    commands:
      - yum install -y zip
      - curl -sL https://rpm.nodesource.com/setup_18.x | bash -
      - yum install -y nodejs
      - npm install -g serverless
      - go install github.com/swaggo/swag/cmd/swag@latest
  pre_build:
    commands:
      - docker-compose -f ./deployments/test.docker-compose.yml up -d db
      # We use the --rm flag to remove the container after the tests are done. If it fails, that means the tests failed, otherwise, it will be removed with this command.
      - docker-compose -f ./deployments/test.docker-compose.yml run --rm app
      - echo "Tests ran successfully."
  build:
    commands:
      - GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -tags lambda.norpc -o bin/bootstrap cmd/tamra/main.go
      - echo "Zipping the binary file into the root directory of the zip" 
      # The -j flag will store just the file, not the full path. The bootstrap file must be in the root directory of the zip.
      - zip -j bin/bootstrap.zip bin/bootstrap
      - echo "Generating swagger docs"
      - swag init -d ./cmd/tamra,./internal/app/tamra/handlers -g main.go --parseInternal --parseDependency -o docs
      - echo "Zipping the docs directory into the docs directory of the zip"
      - zip -ur bin/bootstrap.zip docs/
  post_build:
    commands:
      - echo "Deploying with serverless..."
      - serverless deploy --stage ${PIPELINE_BRANCH} --region ${PIPELINE_REGION} --verbose
      - echo "Deployment completed."

artifacts:
  files:
    - "**/*"
